@using Tetrifact.Core;
@{
    string packageId = ViewData["packageId"] as string;
    Manifest manifest = ViewData["manifest"] as Manifest;
    PageableData<ManifestItem> filesPage = ViewData["filesPage"] as PageableData<ManifestItem>;
    PackageArchiveCreationStatus archiveGenerationStatus = ViewData["archiveGenerationStatus"] as PackageArchiveCreationStatus;
    string pager = ViewData["filesPager"] as string;

    ViewData["Title"] = $"Package : {packageId}";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input type="hidden" class="packageId" value="@packageId" />

<div class="layout-section layout-table">

    <div class="layout-row">
        <div class="layout-label">
        </div>
        <div class="layout-value" data-archiveStatus>


        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Created
        </div>
        <div class="layout-value">
            @manifest.CreatedUtc.ToIso()<span class="subtext"> (@manifest.CreatedUtc.Ago() ago)</span>
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            File count
        </div>
        <div class="layout-value">
            @manifest.Files.Count
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Size
        </div>
        <div class="layout-value">
            @String.Format("{0:n0}", manifest.Size) bytes
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Size on disk
        </div>
        <div class="layout-value">
            @String.Format("{0:n0}", manifest.SizeOnDisk) bytes
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Hash
        </div>
        <div class="layout-value">
            @manifest.Hash
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Info
        </div>
        <div class="layout-value">
            <a href="/v1/packages/@ViewData["packageId"]">Manifest</a>
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Compressed
        </div>
        <div class="layout-value">
            @manifest.IsCompressed
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Functions
        </div>
        <div class="layout-value">
            <a href="/v1/packages/@ViewData["packageId"]/verify">Verify</a>
            <a href="javascript:void(0);" class="package-removePackage">Delete</a>
        </div>
    </div>

</div>

<div class="layout-section">
    <h2>Tags</h2>
    <div>

        <input class="newTag" type="text" placeholder="New tag" />
        <button class="button addTag">Add</button>

        <div>
            @if (manifest.Tags.Any())
            {
                <ul>
                    @foreach (string tag in manifest.Tags.OrderBy(t => t))
                    {
                        <li class="listItem">
                            <a class="package-removeTag" data-tag="@tag" href="javascript:void(null)">
                                <img class="package-deleteIcon" src="/icons/delete.svg" alt="Delete">
                            </a>
                            <a href="/packagesWithTag/@Uri.EscapeDataString(tag)">@tag</a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>
                    This package is untagged.
                </p>
            }
        </div>
    </div>
</div>

<div class="layout-section">
    <div>
        <h2>Files</h2>
        <a id="manifestFiles"></a>
        @if (filesPage.Items.Any())
        {
            <div>

                <ul>
                    @foreach (ManifestItem file in filesPage.Items)
                    {
                        <li class="listItem">
                            <a class="listItem-icon package-download" href="/v1/files/@file.Id">&#10515;</a>
                            <div class="listItem-text">
                                @file.Path
                            </div>
                        </li>
                    }

                </ul>

                @Html.Raw(pager)
            </div> 

        } else {
            <text>
                This package contains no files.
            </text>
        }
    </div>
</div>

