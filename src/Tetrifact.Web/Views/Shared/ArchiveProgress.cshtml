@using Tetrifact.Core;
@model ArchiveProgressInfo
@{
    string packageId = ViewData["packageId"] as string;
}

<div data-complete="@(Model != null && Model.State == PackageArchiveCreationStates.Processed_ArchiveAvailable)">

    @if (Model == null || Model.State == PackageArchiveCreationStates.Processed_ArchiveNotAvailableNotGenerated || Model.State == PackageArchiveCreationStates.Processed_ArchiveAvailable || Model.State == PackageArchiveCreationStates.Processed_CleanupRequired)
    { 
        <a class="button button-header" href="/v1/archives/@packageId">&#10515; Download</a>
    }
    else if (Model.State == PackageArchiveCreationStates.ArchiveGenerating)
    {
        @if (Model.StartedUtc.HasValue)
        { 
            <text>
                Preparing package for dowload, started @Model.StartedUtc.Value.Ago() ago
            </text>
        }
        else
        { 
            <text>
                Package generation waiting in queue for @Model.QueuedUtc.Ago() 
            </text>
        }

        <text>
            @(Math.Round(Model.CombinedPercent, 0))% complete
        </text>
    }

</div>